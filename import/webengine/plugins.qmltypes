import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -noinstantiate -nonrelocatable Sailfish.WebEngine 1.0 --output-fd 3'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "QMozContext"
        prototype: "QObject"
        Property { name: "initialized"; type: "bool"; isReadonly: true }
        Signal { name: "initialized" }
        Signal { name: "contextDestroyed" }
        Signal { name: "lastViewDestroyed" }
        Signal { name: "lastWindowDestroyed" }
        Signal {
            name: "recvObserve"
            Parameter { name: "message"; type: "string" }
            Parameter { name: "data"; type: "QVariant" }
        }
        Method {
            name: "setIsAccelerated"
            Parameter { name: "aIsAccelerated"; type: "bool" }
        }
        Method {
            name: "addComponentManifest"
            Parameter { name: "manifestPath"; type: "string" }
        }
        Method {
            name: "addObserver"
            Parameter { name: "aTopic"; type: "string" }
        }
        Method {
            name: "removeObserver"
            Parameter { name: "aTopic"; type: "string" }
        }
        Method {
            name: "notifyObservers"
            Parameter { name: "topic"; type: "string" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "notifyObservers"
            Parameter { name: "topic"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "runEmbedding"
            Parameter { name: "aDelay"; type: "int" }
        }
        Method { name: "runEmbedding" }
        Method { name: "stopEmbedding" }
        Method { name: "notifyFirstUIInitialized" }
        Method {
            name: "setProfile"
            Parameter { type: "string" }
        }
        Method {
            name: "setViewCreator"
            Parameter { name: "viewCreator"; type: "QMozViewCreator"; isPointer: true }
        }
        Method {
            name: "createView"
            type: "uint"
            Parameter { name: "parentId"; type: "uint" }
            Parameter { name: "parentBrowsingContext"; type: "uintptr_t" }
        }
        Method {
            name: "createView"
            type: "uint"
            Parameter { name: "parentId"; type: "uint" }
        }
        Method { name: "createView"; type: "uint" }
        Method { name: "isInitialized"; type: "bool" }
        Method { name: "isAccelerated"; type: "bool" }
    }
    Component {
        name: "QMozEngineSettings"
        prototype: "QObject"
        Enum {
            name: "CookieBehavior"
            values: {
                "AcceptAll": 0,
                "BlockThirdParty": 1,
                "BlockAll": 2,
                "Deprecated": 3
            }
        }
        Enum {
            name: "ColorScheme"
            values: {
                "PrefersLightMode": 0,
                "PrefersDarkMode": 1,
                "FollowsAmbience": 2
            }
        }
        Enum {
            name: "PreferenceType"
            values: {
                "UnknownPref": 0,
                "StringPref": 32,
                "IntPref": 64,
                "BoolPref": 128
            }
        }
        Property { name: "initialized"; type: "bool"; isReadonly: true }
        Property { name: "autoLoadImages"; type: "bool" }
        Property { name: "javascriptEnabled"; type: "bool" }
        Property { name: "popupEnabled"; type: "bool" }
        Property { name: "cookieBehavior"; type: "CookieBehavior" }
        Property { name: "useDownloadDir"; type: "bool" }
        Property { name: "downloadDir"; type: "string" }
        Property { name: "pixelRatio"; type: "float" }
        Property { name: "doNotTrack"; type: "bool" }
        Property { name: "colorScheme"; type: "ColorScheme" }
        Signal { name: "initialized" }
        Method {
            name: "setPreference"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "setPreference"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "preferenceType"; type: "PreferenceType" }
        }
    }
    Component {
        name: "SailfishOS::WebEngine"
        prototype: "QMozContext"
        exports: ["Sailfish.WebEngine/WebEngine 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "SailfishOS::WebEngineSettings"
        prototype: "QMozEngineSettings"
        exports: ["Sailfish.WebEngine/WebEngineSettings 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "SailfishOS::WebEngineUtils::DownloadHelper"
        prototype: "QObject"
        exports: ["Sailfish.WebEngine/DownloadHelper 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Method {
            name: "createUniqueFileUrl"
            type: "string"
            Parameter { name: "fileName"; type: "string" }
            Parameter { name: "path"; type: "string" }
        }
    }
}
